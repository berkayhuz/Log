namespace LogService.SharedKernel.Keys;
using System.Collections.Generic;

public static class LogMessageDefaults
{
    public static readonly Dictionary<string, string> Messages = new()
    {
        [LogMessageKeys.Audit_CreateLog] = "AUDIT: {UserId} ({Role}) from IP {IP} invoked {Request}",
        [LogMessageKeys.Audit_DeleteLog] = "User {UserId} deleted log from {IP}",
        [LogMessageKeys.Perf_RequestOk] = "[Request OK] {Request} completed in {Elapsed}ms",
        [LogMessageKeys.Exception_Validation] = "[Validation Exception] {Message}",
        [LogMessageKeys.Exception_Elastic] = "[Elastic Query Exception]",
        [LogMessageKeys.Exception_App] = "[App Exception] {Message}",
        [LogMessageKeys.Exception_Unhandled] = "[Unhandled Exception] {Request}",
        [LogMessageKeys.Elastic_WriteSuccess] = "Log written to Elasticsearch successfully",
        [LogMessageKeys.Elastic_WriteFailure] = "Failed to write log to Elasticsearch: {Error}",
        [LogMessageKeys.Elastic_WriteException] = "Exception while writing log to Elasticsearch: {Exception}",
        [LogMessageKeys.Role_UnauthorizedToViewLogs] = "Role '{Role}' is not authorized to view logs.",
        [LogMessageKeys.Elastic_QueryFailure] = "Elasticsearch query failed.",
        [LogMessageKeys.Cache_Hit] = "Cache hit for {key}",
        [LogMessageKeys.Cache_RetrievalFailed] = "Cache retrieval failed for {key}",
        [LogMessageKeys.Cache_Set] = "Cache set for {key}",
        [LogMessageKeys.Cache_SetFailed] = "Cache set failed for {key}",
        [LogMessageKeys.Exception_UnhandledRequest] = "Unhandled exception for {Request}: {Message}",
        [LogMessageKeys.Trace_Handling] = "Handling {Request} with TraceId={TraceId} by {UserId} ({Role}) from IP {IP}",
        [LogMessageKeys.Trace_Handled] = "Handled {Request} with TraceId={TraceId} in {Elapsed}ms",
        [LogMessageKeys.Perf_RequestSlow] = "[Slow Request] {Request} took {Elapsed}ms",
        [LogMessageKeys.Exception_ValidationFailed] = "Validation failed for {Request}: {Failures}",
        [LogMessageKeys.Exception_ValidationError] = "Validation error occurred.",
        [LogMessageKeys.Exception_ElasticQueryFailed] = "Elastic query failed.",
        [LogMessageKeys.Exception_AppError] = "Application error occurred.",
        [LogMessageKeys.Exception_AuthorizationError] = "Authorization error occurred.",
        [LogMessageKeys.Exception_NotFound] = "Resource not found.",
        [LogMessageKeys.Exception_Unexpected] = "An unexpected error occurred.",
        [LogMessageKeys.Elastic_FlexibleQueryStarted] = "Flexible log query started for Index: {Index}, Role: {Role}, Filter: {Filter}",
        [LogMessageKeys.Elastic_FlexibleQueryFailed] = "Flexible log query failed for Index: {Index}, Role: {Role}, Errors: {Errors}",
        [LogMessageKeys.Elastic_FlexibleQuerySucceeded] = "Flexible log query succeeded for Index: {Index}, Role: {Role}, ReturnedCount: {ReturnedCount}",
        [LogMessageKeys.Cache_Miss] = "Cache miss: {key}",
        [LogMessageKeys.Cache_SetWithExpiration] = "Cache set: {key} (Expiration: {Expiration}s)",
        [LogMessageKeys.Elastic_WriteFailureReason] = "Elasticsearch yazım hatası: {Reason}",
        [LogMessageKeys.Elastic_Exception] = "Elasticsearch hata: {Message}",
        [LogMessageKeys.Auth_UnauthorizedLogQuery] = "Unauthorized log query attempt by role {Role}",
        [LogMessageKeys.Auth_RoleNotAuthorized] = "Role '{Role}' is not authorized to view logs.",
        [LogMessageKeys.Log_InvalidMessageKey] = "Invalid log message key: null or empty",
        [LogMessageKeys.Log_InvalidMessageKeyBracket] = "[Invalid log message key]",
        [LogMessageKeys.Redis_MessageNotFound] = "Log message not found in Redis | Key: {Key}",
        [LogMessageKeys.Redis_MissingLogMessage] = "[Missing log message: {Key}]",
        [LogMessageKeys.Redis_AccessError] = "Redis access error | Key: {Key}",
        [LogMessageKeys.Redis_ErrorReadingMessage] = "[Error reading message for key: {Key}]",
        [LogMessageKeys.Redis_NoKeysFound] = "No keys found in Redis set.",
        [LogMessageKeys.Redis_ErrorRetrievingKeys] = "Error retrieving log message keys from Redis",
        [LogMessageKeys.Log_InvalidMessage] = "Geçersiz log mesajı.",
        [LogMessageKeys.Elastic_WriteErrorList] = "Elastic yazım hatası: {Errors}",
        [LogMessageKeys.Auth_RoleMismatch] = "Token'daki role ile header'daki role uyuşmuyor.",
        [LogMessageKeys.Exception_Unhandled_No_Request] = "[Unhandled Exception]",
    };
}
